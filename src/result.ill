; Generated with My Pascal Compiler
; program 0

; Declaration of String Global Constants: 
@bool_str = global [2 x i8*] [ i8* getelementptr ([6 x i8]* @.false_str, i32 0, i32 0), i8* getelementptr ([5 x i8]* @.true_str, i32 0, i32 0) ]
@.false_str = internal constant[6 x i8] c"false\00"
@.true_str = internal constant [5 x i8] c"true\00"
@.int_fmt = internal constant [3 x i8] c"%%d\00"
@.bool_fmt = internal constant [3 x i8] c"%%s\00"

; External declaration of functions
declare i32 @puts(i8 *)
declare i32 @putchar(i32)
declare i32 @printf(i8*, ...)

0 = global i0 0
0 = global i0 0

; [assignop][int] i(-1/-1) = 0
    add void 0, 0
; [assignop][int] i(0/0) = 0

while (    icmp sle void 0, 7
) {
; [assignop][add_expr] i(-1/1) = 0
    add void 0, 8
; [assignop][add_expr] i(2/2) = 0
}

; [assignop][bool] x(-1/2) = 1
    add void 1, 0
; [assignop][bool] x(3/3) = 1

while (0) {
    load i8** getelementptr ([2 x i8*]* @bool_str, i32 0, i32 0 ), align 4
    call i32 (i8* noalias , ...)* bitcast (i32 (i8*, ...)* 
        @printf to i32 (i8* noalias , ...)*)
        ( i8* getelementptr ([3 x i8]* @.bool_fmt, i32 0, i32 0) noalias , 
        i8* %%%d )

; [assignop][bool] x(-1/1) = 0
    add void 0, 0
; [assignop][bool] x(2/2) = 0

}

    load i8** getelementptr ([2 x i8*]* @bool_str, i32 0, i32 0 ), align 4
    call i32 (i8* noalias , ...)* bitcast (i32 (i8*, ...)* 
        @printf to i32 (i8* noalias , ...)*)
        ( i8* getelementptr ([3 x i8]* @.bool_fmt, i32 0, i32 0) noalias , 
        i8* %%%d )

